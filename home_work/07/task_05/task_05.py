"""
Напишите программу, которая принимает на стандартный вход список игр футбольных команд с результатом матча и выводит на стандартный вывод
сводную таблицу результатов всех команд.

За победу команде начисляется 3 очка, за поражение — 0, за ничью — 1.

Формат ввода следующий:
В первой строке указано целое число nn — количество завершенных игр.
После этого идет nn строк, в которых записаны результаты игры в следующем формате:
Перваякоманда;Забитопервойкомандой;Втораякоманда;Забитовторойкомандой

Вывод программы необходимо оформить следующим образом:
Команда:Всегоигр Побед Ничьих Поражений Всегоочков

Конкретный пример ввода-вывода приведён ниже.

Порядок вывода команд произвольный.

Пример входа:

3
Спартак;9;Зенит;10
Локомотив;12;Зенит;3
Спартак;8;Локомотив;15

Выход будет:

Спартак:2 0 0 2 0
Зенит:2 1 0 1 3
Локомотив:2 2 0 0 6 
"""
#Задание сделал в виде словаря списков, где ключ - имя команды, а список по ключу - интовые значения в виде "Всего игр; Побед; Ничьих; Поражений; Всего очков"
import re

#Не очень ясно, зачем общее количество игр нужно для решения. Не понятно, в каком виде будут приходить входящие значение, пусть будет в виде отдельных строк
number_of_games = "3"
game_1 = "Спартак;9;Зенит;10"
game_2 = "Локомотив;12;Зенит;3"
game_3 = "Спартак;8;Локомотив;15"
#Склеиваем все результаты в одну строку
game_string = game_1+game_2+game_3
#Получаем список вида [Спартак;9;Зенит;10, ...]
game_list = re.findall(r'\w+;\d+;\w+;\d+', game_string)
#Создаём словарь, куда будут записываться результаты, где ключ - имя команды и список по ключу - результаты
game_table = dict()
#Проходим по всем значениям списка игр
for item in game_list:
    #Записываем в промежуточный список количество голов, где первое значение - голы первой команды, второе - соответственно голы второй команды
    goals_list = re.findall(r'\d+', item)
    first_command_goals = int(goals_list[0])
    second_command_goals = int(goals_list[1])
    #Получаем список команд, первое значение - название первой команды, второе - второй команды
    command_name_list = re.findall(r'\D+;', item)
    first_command_name = command_name_list[0].replace(";","")
    second_command_name = command_name_list[1].replace(";","")
    #Проверяем, есть ли ключ-имя команды в словаре, если нет, то добавляем с словарь новый ключ и список, заполненный нулями, где будут аккумулироваться результаты
    if first_command_name not in game_table:
        game_table[first_command_name] = [0 for x in range(5)]
    if second_command_name not in game_table:
        game_table[second_command_name] = [0 for x in range(5)]
    #Добавляем в сыгранные игры каждой команды по единичке
    game_table[first_command_name][0]+=1
    game_table[second_command_name][0]+=1
    #Условие, какая команда выиграла или произошла ничья, на основе этого заполняем данными список результатов в словаре по ключам-именам команды
    if first_command_goals > second_command_goals:
         game_table[first_command_name][1]+=1
         game_table[second_command_name][3]+=1
         game_table[first_command_name][4]+=3
    elif first_command_goals == second_command_goals:
        game_table[first_command_name][2]+=1
        game_table[second_command_name][2]+=1
        game_table[first_command_name][4]+=1
        game_table[second_command_name][4]+=1
    else:
        game_table[first_command_name][3]+=1
        game_table[second_command_name][1]+=1
        game_table[second_command_name][4]+=3

#Выводим результаты, в точности, как описано в задании
for item in game_table:
    buff_string = ' '.join(map(str,game_table[item]))
    print (f"{item}: {buff_string}")